// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/storage.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimeSeriesDatumRequest struct {
	Instrument           int32                `protobuf:"varint,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Value                float32              `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeSeriesDatumRequest) Reset()         { *m = TimeSeriesDatumRequest{} }
func (m *TimeSeriesDatumRequest) String() string { return proto.CompactTextString(m) }
func (*TimeSeriesDatumRequest) ProtoMessage()    {}
func (*TimeSeriesDatumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f8120b86ef7151a, []int{0}
}

func (m *TimeSeriesDatumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeSeriesDatumRequest.Unmarshal(m, b)
}
func (m *TimeSeriesDatumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeSeriesDatumRequest.Marshal(b, m, deterministic)
}
func (m *TimeSeriesDatumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeSeriesDatumRequest.Merge(m, src)
}
func (m *TimeSeriesDatumRequest) XXX_Size() int {
	return xxx_messageInfo_TimeSeriesDatumRequest.Size(m)
}
func (m *TimeSeriesDatumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeSeriesDatumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimeSeriesDatumRequest proto.InternalMessageInfo

func (m *TimeSeriesDatumRequest) GetInstrument() int32 {
	if m != nil {
		return m.Instrument
	}
	return 0
}

func (m *TimeSeriesDatumRequest) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TimeSeriesDatumRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type MikapodStorageResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MikapodStorageResponse) Reset()         { *m = MikapodStorageResponse{} }
func (m *MikapodStorageResponse) String() string { return proto.CompactTextString(m) }
func (*MikapodStorageResponse) ProtoMessage()    {}
func (*MikapodStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f8120b86ef7151a, []int{1}
}

func (m *MikapodStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MikapodStorageResponse.Unmarshal(m, b)
}
func (m *MikapodStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MikapodStorageResponse.Marshal(b, m, deterministic)
}
func (m *MikapodStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MikapodStorageResponse.Merge(m, src)
}
func (m *MikapodStorageResponse) XXX_Size() int {
	return xxx_messageInfo_MikapodStorageResponse.Size(m)
}
func (m *MikapodStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MikapodStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MikapodStorageResponse proto.InternalMessageInfo

func (m *MikapodStorageResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MikapodStorageResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*TimeSeriesDatumRequest)(nil), "api.TimeSeriesDatumRequest")
	proto.RegisterType((*MikapodStorageResponse)(nil), "api.MikapodStorageResponse")
}

func init() { proto.RegisterFile("api/storage.proto", fileDescriptor_0f8120b86ef7151a) }

var fileDescriptor_0f8120b86ef7151a = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xdf, 0x4a, 0xf3, 0x40,
	0x10, 0xc5, 0xbf, 0xb4, 0xb4, 0x9f, 0x1d, 0x41, 0x70, 0x91, 0x10, 0x22, 0x68, 0xc8, 0x55, 0xae,
	0x36, 0x50, 0x6f, 0xbc, 0x15, 0xbc, 0x12, 0x04, 0xd9, 0xf6, 0x05, 0x26, 0x64, 0x0c, 0x8b, 0xdd,
	0xec, 0x9a, 0x99, 0xf5, 0x19, 0x7c, 0x6c, 0x21, 0x31, 0xfe, 0xa3, 0x97, 0xe7, 0xcc, 0x61, 0xe6,
	0x77, 0x06, 0xce, 0x31, 0xd8, 0x9a, 0xc5, 0x0f, 0xd8, 0x91, 0x0e, 0x83, 0x17, 0xaf, 0x96, 0x18,
	0x6c, 0x7e, 0xdd, 0x79, 0xdf, 0x1d, 0xa8, 0x1e, 0xad, 0x26, 0x3e, 0xd7, 0x62, 0x1d, 0xb1, 0xa0,
	0x0b, 0x53, 0xaa, 0x7c, 0x4f, 0x20, 0xdd, 0x5b, 0x47, 0x3b, 0x1a, 0x2c, 0xf1, 0x3d, 0x4a, 0x74,
	0x86, 0x5e, 0x23, 0xb1, 0xa8, 0x2b, 0x00, 0xdb, 0xb3, 0x0c, 0xd1, 0x51, 0x2f, 0x59, 0x52, 0x24,
	0xd5, 0xca, 0xfc, 0x70, 0xd4, 0x05, 0xac, 0xde, 0xf0, 0x10, 0x29, 0x5b, 0x14, 0x49, 0xb5, 0x30,
	0x93, 0x50, 0xb7, 0xb0, 0xf9, 0xba, 0x91, 0x2d, 0x8b, 0xa4, 0x3a, 0xdd, 0xe6, 0x7a, 0xa2, 0xd0,
	0x33, 0x85, 0xde, 0xcf, 0x09, 0xf3, 0x1d, 0x2e, 0x1f, 0x20, 0x7d, 0xb4, 0x2f, 0x18, 0x7c, 0xbb,
	0x9b, 0x8a, 0x18, 0xe2, 0xe0, 0x7b, 0x26, 0x95, 0xc1, 0x7f, 0x47, 0xcc, 0xd8, 0xd1, 0x88, 0xb1,
	0x31, 0xb3, 0x54, 0x29, 0xac, 0x59, 0x50, 0x22, 0x8f, 0x10, 0x27, 0xe6, 0x53, 0x6d, 0x1b, 0x38,
	0xfb, 0xbd, 0x4b, 0x3d, 0x81, 0xba, 0x6b, 0xdb, 0x3f, 0x55, 0xd5, 0xa5, 0xc6, 0x60, 0xf5, 0xf1,
	0x07, 0xe4, 0xd3, 0xf0, 0x38, 0x53, 0xf9, 0xaf, 0x59, 0x8f, 0x75, 0x6e, 0x3e, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x24, 0xc4, 0x9f, 0xb9, 0x7c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MikapodStorageClient is the client API for MikapodStorage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MikapodStorageClient interface {
	AddTimeSeriesDatum(ctx context.Context, in *TimeSeriesDatumRequest, opts ...grpc.CallOption) (*MikapodStorageResponse, error)
}

type mikapodStorageClient struct {
	cc *grpc.ClientConn
}

func NewMikapodStorageClient(cc *grpc.ClientConn) MikapodStorageClient {
	return &mikapodStorageClient{cc}
}

func (c *mikapodStorageClient) AddTimeSeriesDatum(ctx context.Context, in *TimeSeriesDatumRequest, opts ...grpc.CallOption) (*MikapodStorageResponse, error) {
	out := new(MikapodStorageResponse)
	err := c.cc.Invoke(ctx, "/api.MikapodStorage/AddTimeSeriesDatum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MikapodStorageServer is the server API for MikapodStorage service.
type MikapodStorageServer interface {
	AddTimeSeriesDatum(context.Context, *TimeSeriesDatumRequest) (*MikapodStorageResponse, error)
}

// UnimplementedMikapodStorageServer can be embedded to have forward compatible implementations.
type UnimplementedMikapodStorageServer struct {
}

func (*UnimplementedMikapodStorageServer) AddTimeSeriesDatum(ctx context.Context, req *TimeSeriesDatumRequest) (*MikapodStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTimeSeriesDatum not implemented")
}

func RegisterMikapodStorageServer(s *grpc.Server, srv MikapodStorageServer) {
	s.RegisterService(&_MikapodStorage_serviceDesc, srv)
}

func _MikapodStorage_AddTimeSeriesDatum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeSeriesDatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MikapodStorageServer).AddTimeSeriesDatum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MikapodStorage/AddTimeSeriesDatum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MikapodStorageServer).AddTimeSeriesDatum(ctx, req.(*TimeSeriesDatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MikapodStorage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.MikapodStorage",
	HandlerType: (*MikapodStorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTimeSeriesDatum",
			Handler:    _MikapodStorage_AddTimeSeriesDatum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/storage.proto",
}
